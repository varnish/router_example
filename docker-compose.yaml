version: '3.6'
services:
  origin:
    image: "httpd:2-alpine"
    restart: always
    hostname: origin.example.com
    volumes:
      - ./website/:/usr/local/apache2/htdocs
    networks:
      default:
        ipv4_address: 172.31.0.200

  varnish1:
     container_name: varnish1
     image: "quay.io/varnish-software/varnish-plus:latest"
     hostname: cache1.example.com
     restart: always
     volumes:
         - type: "volume"
           source: vcontroller
           target: /etc/varnish
         - type: "volume"
           source: varnish
           target: /var/lib/varnish
     environment:
       - "VARNISH_ADMIN_LISTEN_ADDRESS=0.0.0.0"
       - "VARNISH_LISTEN_PORT=80"
     networks:
       default:
         ipv4_address: 172.31.0.201

  varnish2:
     container_name: varnish2
     image: "quay.io/varnish-software/varnish-plus:latest"
     hostname: cache2.example.com
     restart: always
     volumes:
         - type: "volume"
           source: vcontroller
           target: /etc/varnish
         - type: "volume"
           source: varnish
           target: /var/lib/varnish
     environment:
       - "VARNISH_ADMIN_LISTEN_ADDRESS=0.0.0.0"
       - "VARNISH_LISTEN_PORT=80"
     networks:
       default:
         ipv4_address: 172.31.0.202

  router:
    container_name: router
    image: 'quay.io/varnish-software/varnish-controller-router:latest'
    hostname: router
    restart: always
    volumes:
        - type: "volume"
          source: vcontroller
          target: /etc/varnish
    environment:
      - "VARNISH_CONTROLLER_ROUTER_NAME=router"
      - "VARNISH_CONTROLLER_BASE_DIR=/etc/varnish/routers/"
      - "VARNISH_CONTROLLER_NATS_SERVER=nats:4222"
      - "VARNISH_CONTROLLER_HTTP_PORT=80"
      - "VARNISH_CONTROLLER_HTTP_HOST=0.0.0.0"
    depends_on:
      - nats
    expose:
      - "80"
    networks:
      default:
        ipv4_address: 172.31.0.203

  agent1:
    container_name: agent1
    image: 'quay.io/varnish-software/varnish-controller-agent:latest'
    hostname: agent1
    restart: always
    volumes:
        - type: "volume"
          source: vcontroller
          target: /etc/varnish
        - type: "volume"
          source: varnish
          target: /var/lib/varnish
    links:
      - varnish1
      - nats
    environment:
      - "VARNISH_CONTROLLER_AGENT_NAME=server1"
      - "VARNISH_CONTROLLER_BASE_DIR=/etc/varnish/agents/"
      - "VARNISH_CONTROLLER_NATS_SERVER=nats:4222"
      - "VARNISH_CONTROLLER_VARNISH_NAME=varnish1"
      - "VARNISH_CONTROLLER_VARNISH_HOST=172.31.0.201:6081"
      - "VARNISH_CONTROLLER_BASE_URL=http://cache1.example.com"
      - "VARNISH_CONTROLLER_IPV6=::1"
      - "VARNISH_CONTROLLER_IPV4=172.31.0.204"
    depends_on:
      - nats
    networks:
      default:
        ipv4_address: 172.31.0.204

  agent2:
    container_name: agent2
    image: 'quay.io/varnish-software/varnish-controller-agent:latest'
    hostname: agent2
    restart: always
    volumes:
        - type: "volume"
          source: vcontroller
          target: /etc/varnish
        - type: "volume"
          source: varnish
          target: /var/lib/varnish
    links:
      - varnish2
      - nats
    environment:
      - "VARNISH_CONTROLLER_AGENT_NAME=server2"
      - "VARNISH_CONTROLLER_BASE_DIR=/etc/varnish/agents/"
      - "VARNISH_CONTROLLER_NATS_SERVER=nats:4222"
      - "VARNISH_CONTROLLER_VARNISH_NAME=varnish2"
      - "VARNISH_CONTROLLER_VARNISH_HOST=172.31.0.202:6081"
      - "VARNISH_CONTROLLER_BASE_URL=http://cache2.example.com"
      - "VARNISH_CONTROLLER_IPV6=::1"
      - "VARNISH_CONTROLLER_IPV4=172.31.0.205"
    depends_on:
      - nats
    networks:
      default:
        ipv4_address: 172.31.0.205

  apigw:
    container_name: apigw
    image: 'quay.io/varnish-software/varnish-controller-api-gw:latest'
    hostname: apigw
    restart: always
    environment:
      - "VARNISH_CONTROLLER_NATS_SERVER=nats:4222"
    depends_on:
      - nats
      - brainz
    networks:
      default:
        ipv4_address: 172.31.0.206

  brainz:
    container_name: brainz
    image: 'quay.io/varnish-software/varnish-controller-brainz:latest'
    hostname: brainz
    restart: always
    volumes:
      - ./router_license.lic:/var/lib/varnish-controller/varnish-controller-brainz/license.lic
    links:
      - nats
    environment:
      - "VARNISH_CONTROLLER_NATS_SERVER=nats:4222"
      - "VARNISH_CONTROLLER_DB_USER=varnish-controller"
      - "VARNISH_CONTROLLER_DB_PASS=varnish-controller"
      - "VARNISH_CONTROLLER_DB_NAME=varnish-controller"
      - "VARNISH_CONTROLLER_DB_SERVER=db"
      - "VARNISH_CONTROLLER_MOD_ADMIN_USER=true"
      - "VARNISH_CONTROLLER_SYSTEM_ADMIN_USER=test"
      - "VARNISH_CONTROLLER_SYSTEM_ADMIN_PASS=test"
    depends_on:
      - db
      - nats
    networks:
      default:
        ipv4_address: 172.31.0.207

  controller-ui:
    container_name: controllerui
    image: 'quay.io/varnish-software/varnish-controller-ui:latest'
    hostname: ui
    restart: always
    environment:
        - "VARNISH_UI_SERVER_API_HOSTS=http://apigw:8002"
        - "VARNISH_UI_SERVER_CSP=false"
        - "VARNISH_UI_SERVER_HTTP_PORT=80"
    depends_on:
      - apigw
    networks:
      default:
        ipv4_address: 172.31.0.208

  db:
    container_name: psql
    image: postgres
    hostname: db
    restart: always
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: varnish-controller
      POSTGRES_PASSWORD: varnish-controller
    networks:
      default:
        ipv4_address: 172.31.0.209

  nats:
    container_name: nats
    image: 'quay.io/varnish-software/varnish-controller-nats:latest'
    hostname: nats
    restart: always
    expose:
      - "4222"
    networks:
      default:
        ipv4_address: 172.31.0.210

volumes:
  vcontroller:
  dbdata:
  varnish:

networks:
  default:
    ipam:
      config:
      - subnet: 172.31.0.0/16

